  !{{ job.build_name() }}:
    runs-on: [self-hosted, "windows.4xlarge"]
    timeout-minutes: !{{ common.timeout_minutes }}
    env:
      BUILD_ENVIRONMENT: !{{ job.build_environment }}
      BUILD_WHEEL: 1
      MAX_JOBS: 8
      CUDA_VERSION: "!{{ job.cuda_version }}"
      IN_CI: 1
      IS_GHA: 1
      INSTALL_WINDOWS_SDK: 1
      PYTHON_VERSION: "3.8"
      PYTORCH_RETRY_TEST_CASES: 1
      PR_LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
      SCCACHE_BUCKET: "ossci-compiler-cache"
      VC_PRODUCT: "BuildTools"
      VC_VERSION: ""
      VS_VERSION: "16.8.6"
      VC_YEAR: "2019"
      ALPINE_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/tool/alpine"
      no_proxy: !{{ common.squid_no_proxy }}
      AWS_DEFAULT_REGION: us-east-1
      PR_NUMBER: ${{ github.event.pull_request.number }}
      SHA1: ${{ github.event.pull_request.head.sha || github.sha }}
      {%- if job.build_with_debug %}
      DEBUG: 1
      {%- endif %}
      {%- if job.cuda_version != "cpu" %}
      TORCH_CUDA_ARCH_LIST: "7.0"
      {%- endif %}
      USE_CUDA: !{{ 1 if job.cuda_version != "cpu" else 0 }}
      JOB_BASE_NAME: !{{ job.build_environment }}-build
      http_proxy: "!{{ common.squid_proxy }}"
      https_proxy: "!{{ common.squid_proxy }}"
    steps:
      - name: "[FB EMPLOYEES] Enable SSH (Click me for login details)"
        uses: seemethere/add-github-ssh-key@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      !{{ common.checkout_pytorch("recursive") }}
      !{{ common.display_ec2_information() }}
      - name: Install Visual Studio 2019 toolchain
        shell: powershell
        run: |
          .\.circleci\scripts\vs_install.ps1
{%- if job.cuda_version != "cpu" %}
      - name: Install Cuda
        shell: bash
        run: |
          .circleci/scripts/windows_cuda_install.sh
      - name: Install Cudnn
        shell: bash
        run: |
          .circleci/scripts/windows_cudnn_install.sh
{%- endif %}
      !{{ common.parse_ref() }}
      - name: Build
        shell: bash
        env:
          PYTORCH_FINAL_PACKAGE_DIR: /c/${{ github.run_id }}/build-results/
          BRANCH: ${{ steps.parse-ref.outputs.branch }}
        run: |
          .jenkins/pytorch/win-build.sh
      # Upload to github so that people can click and download artifacts
      - name: Upload artifacts to s3
        uses: !{{ common.upload_artifact_s3_action }}
        with:
          retention-days: 14
          if-no-files-found: error
          name: ${{ env.BUILD_ENVIRONMENT }}
          path: C:\${{ github.run_id }}\build-results
      !{{ common.win_wait_and_kill_ssh() }}
      - name: Cleanup build-results and workspaces
        if: always()
        shell: bash
        env:
          PYTORCH_FINAL_PACKAGE_DIR: /c/${{ github.run_id }}/build-results/
        # Should remove the entirety of pytorch-${{ github.run_id }}
        run: |
          rm -rf "${PYTORCH_FINAL_PACKAGE_DIR}"
          rm -rf ./*

  {%- for test_job in job.test_jobs() %}
  !{{ test_job.name }}:
    timeout-minutes: !{{ common.timeout_minutes }}
    env:
      BUILD_ENVIRONMENT: !{{ job.build_environment }}
      BUILD_WHEEL: 1
      MAX_JOBS: 8
      CUDA_VERSION: "!{{ job.cuda_version }}"
      IN_CI: 1
      IS_GHA: 1
      INSTALL_WINDOWS_SDK: 1
      PYTHON_VERSION: "3.8"
      PYTORCH_RETRY_TEST_CASES: 1
      PR_LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
      SCCACHE_BUCKET: "ossci-compiler-cache"
      VC_PRODUCT: "BuildTools"
      VC_VERSION: ""
      VS_VERSION: "16.8.6"
      VC_YEAR: "2019"
      ALPINE_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/tool/alpine"
      no_proxy: !{{ common.squid_no_proxy }}
      AWS_DEFAULT_REGION: us-east-1
      PR_NUMBER: ${{ github.event.pull_request.number }}
      SHA1: ${{ github.event.pull_request.head.sha || github.sha }}
      {%- if job.build_with_debug %}
      DEBUG: 1
      {%- endif %}
      {%- if job.cuda_version != "cpu" %}
      TORCH_CUDA_ARCH_LIST: "7.0"
      {%- endif %}
      USE_CUDA: !{{ 1 if job.cuda_version != "cpu" else 0 }}
      JOB_BASE_NAME: !{{ job.build_environment }}-test
      SHARD_NUMBER: !{{ test_job.shard }}
      NUM_TEST_SHARDS: !{{ test_job.num_shards }}
      TEST_CONFIG: !{{ test_job.config }}
      http_proxy: "!{{ common.squid_proxy }}"
      https_proxy: "!{{ common.squid_proxy }}"
      # TODO{# PYTORCH_IGNORE_DISABLED_ISSUES: ${{ needs.generate-test-matrix.outputs.ignore-disabled-issues }} #}
    needs: [!{{ job.build_name() }}]
    runs-on: [self-hosted, !{{ test_job.runner }}]
    steps:
      !{{ common.display_ec2_information() }}
      - name: "[FB EMPLOYEES] Enable SSH (Click me for login details)"
        uses: seemethere/add-github-ssh-key@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      !{{ common.checkout_pytorch("recursive") }}
      - name: Install Visual Studio 2019 toolchain
        shell: powershell
        run: |
          .\.circleci\scripts\vs_install.ps1
{%- if job.cuda_version != "cpu" and not test_job.config == 'force_on_cpu' %}
      - name: Install Cuda
        shell: bash
        run: |
          .circleci/scripts/windows_cuda_install.sh
      - name: Install Cudnn
        shell: bash
        run: |
          .circleci/scripts/windows_cudnn_install.sh
{%- endif %}
      - uses: seemethere/download-artifact-s3@0504774707cbc8603d7dca922e8026eb8bf3b47b
        name: Download PyTorch Build Artifacts
        with:
          name: ${{ env.BUILD_ENVIRONMENT }}
          path: C:\${{ github.run_id }}\build-results
      - name: Check build-results folder
        shell: powershell
        run: |
          tree /F C:\$Env:GITHUB_RUN_ID\build-results
      # Needed for coverage in win-test.sh
      - uses: actions/setup-python@v2
        name: Setup Python3
        with:
          python-version: '3.x'
      - name: Test
        shell: bash
        env:
          PYTORCH_FINAL_PACKAGE_DIR: /c/${{ github.run_id }}/build-results/
        # Time out the test phase after 3.5 hours
        timeout-minutes: 210
        run: |
            .jenkins/pytorch/win-test.sh
      !{{ common.upload_downloaded_files(name='windows', config=test_job.config, shard=test_job.shard, num_shards=test_job.num_shards, runner=test_job.runner) }}
      !{{ common.upload_test_reports(name='windows', config=test_job.config, shard=test_job.shard, num_shards=test_job.num_shards, runner=test_job.runner) }}
      !{{ common.render_test_results() }}
      !{{ common.win_wait_and_kill_ssh() }}
      !{{ common.parse_ref() }}
      !{{ common.upload_test_statistics(job.build_environment) }}
      - name: Cleanup workspace
        if: always()
        shell: bash
        # Should remove the entirety of pytorch-${{ github.run_id }}
        run: |
          rm -rf ./*
  {%- endfor %}
